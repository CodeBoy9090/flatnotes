<Page
    x:Class="FlatNotes.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FlatNotes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Converters="using:FlatNotes.Converters"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:DataContext="{d:DesignData /SampleData/SettingsViewModelSampleData.xaml}">
    <!--Background="{ThemeResource AppStatusBarBackgroundBrush}"-->
    
    <Page.Resources>
        <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid x:Name="ContentRoot" Grid.Row="1">
            <Grid.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </Grid.Transitions>
            
            <StackPanel>
                <Image Height="80" Source="ms-appx:///Assets/Logo.png" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                <TextBlock Margin="0,0,0,24" Text="{x:Bind viewModel.AppName}" HorizontalAlignment="Center" Style="{StaticResource SubheaderTextBlockStyle}"/>
                
                <ToggleSwitch x:Uid="ThemeToggleSwitch" Margin="0,12,0,24" Header="Theme" OffContent="Light" OnContent="Dark" IsOn="{x:Bind viewModel.IsDarkTheme, Mode=TwoWay}"/>
                <ToggleSwitch x:Uid="TransparentDefaultTileToggleSwitch" Margin="0,0,0,24" Header="Default tile background" OffContent="Transparent" OnContent="Solid color" IsOn="{x:Bind viewModel.IsSolidColorDefaultTile, Mode=TwoWay}"/>
                <ToggleSwitch x:Uid="TransparentNoteTileToggleSwitch" Margin="0,0,0,24" Header="Note live tile background" OffContent="Transparent" OnContent="Solid color" IsOn="{x:Bind viewModel.IsSolidColorNoteTile, Mode=TwoWay}" Visibility="{x:Bind viewModel.IsMobile, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <TextBlock Margin="0,24,0,6">
                    <Run x:Uid="AppVersionTextBlock" Text="Version"/>
                    <Run Text="{x:Bind viewModel.AppVersion}"/>
                </TextBlock>

                <TextBlock Margin="0,0,0,6">
                    <Run x:Uid="DevelopedByTextBlock" Text="Developed by"/>
                    <Hyperlink NavigateUri="http://twitter.com/brunolemos" Click="{x:Bind viewModel.DeveloperTwitterHyperlink_OnClick}">@brunolemos</Hyperlink>
                </TextBlock>

                <Button Margin="0,6,0,6" Content="Download Flat Notes" HorizontalAlignment="Left" Command="{x:Bind viewModel.DownloadAppCommand}" Visibility="{x:Bind viewModel.IsBeta, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </Grid>
        
        <CommandBar Grid.Row="{x:Bind viewModel.IsMobile, Converter={StaticResource IsMobileToGridRowConverter}}" EntranceNavigationTransitionInfo.IsTargetElement="False" CommonNavigationTransitionInfo.IsStaggerElement="False"  ContinuumNavigationTransitionInfo.IsEntranceElement="False" ContinuumNavigationTransitionInfo.IsExitElement="False" >
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="RateAppbarButton" Icon="OutlineStar" Label="Rate" Command="{x:Bind viewModel.RateAppCommand}" ToolTipService.ToolTip="{Binding Label, RelativeSource={RelativeSource Mode=Self}}"/>
                <AppBarButton x:Uid="SupportAppBarButton" Icon="Mail" Label="Support" Command="{x:Bind viewModel.ContactSupportCommand}" ToolTipService.ToolTip="{Binding Label, RelativeSource={RelativeSource Mode=Self}}"/>
            </CommandBar.PrimaryCommands>
        </CommandBar>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ContentRoot.Margin" Value="12"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ContentRoot.Margin" Value="24"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ContentRoot.Margin" Value="80,24"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1500" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ContentRoot.Margin" Value="120,24"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>