<UserControl
    x:Class="FlatNotes.Controls.NotesControl"
    x:Name="Root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FlatNotes.Controls"
    xmlns:models="using:FlatNotes.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    d:DataContext="{Binding Notes, Source={d:DesignData /SampleData/MainViewModelSampleData.xaml}}">
    
    <UserControl.Resources>
        <MenuFlyout x:Key="NoteMenuFlyout">
            <MenuFlyoutItem Text="Restore" Command="{x:Bind viewModel.RestoreNoteCommand}" CommandParameter="{Binding}" Visibility="{Binding IsArchived, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <MenuFlyoutItem Text="Archive" Command="{x:Bind viewModel.ArchiveNoteCommand}" CommandParameter="{Binding}" Visibility="{Binding IsArchived, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"/>
            <MenuFlyoutItem Text="Delete" Command="{x:Bind viewModel.DeleteNoteCommand}" CommandParameter="{Binding}"/>
            <MenuFlyoutItem Text="Pin to start" Command="{x:Bind viewModel.PinCommand}" CommandParameter="{Binding}" Visibility="{Binding IsPinned, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"/>
            <MenuFlyoutItem Text="Unpin from start" Command="{x:Bind viewModel.UnpinCommand}" CommandParameter="{Binding}" Visibility="{Binding IsPinned, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <MenuFlyoutSubItem Text="Change color">
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[0].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[0]}"/>
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[1].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[1]}"/>
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[2].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[2]}"/>
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[3].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[3]}"/>
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[4].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[4]}"/>
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[5].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[5]}"/>
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[6].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[6]}"/>
                <MenuFlyoutItem Background="{x:Bind viewModel.Colors[7].Color}" Click="OnChangeColorClick" CommandParameter="{x:Bind viewModel.Colors[7]}"/>
            </MenuFlyoutSubItem>
            <!--<MenuFlyoutSeparator/>
            <MenuFlyoutItem Text="Share..."/>
            <MenuFlyoutItem Text="Reorder..."/>-->
        </MenuFlyout>
    </UserControl.Resources>
    
    <GridView x:Name="NotesGridView"
              HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
              ItemsSource="{Binding}" DataContext="{Binding ItemsSource, ElementName=Root}"
              SelectionMode="None" CanReorderItems="False" CanDragItems="False" AllowDrop="False"  
              IsItemClickEnabled="True" ItemClick="GridView_ItemClick" Holding="GridView_Holding">
        
        <GridView.ItemContainerTransitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True" FromVerticalOffset="200" FromHorizontalOffset="0"/>
                <NavigationThemeTransition/>
                <ContentThemeTransition/>
                <AddDeleteThemeTransition/>
                <ReorderThemeTransition/>
                <RepositionThemeTransition />
            </TransitionCollection>
        </GridView.ItemContainerTransitions>

        <GridView.ItemsPanel>
            <ItemsPanelTemplate>
                <local:FluidGrid x:Name="NotesFluidGrid" Margin="{Binding ElementName=Root, Path=Padding}" ItemWidth="{Binding ElementName=Root, Path=ItemWidth}" ItemStretch="{Binding ElementName=Root, Path=ItemStretch}" Columns="{Binding ElementName=Root, Path=Columns}" AllowSingleColumn="{Binding ElementName=Root, Path=AllowSingleColumn}" HorizontalAlignment="Center"/>
                <!--<StackPanel Margin="-6" AllowDrop="True"/>-->
                <!--<ItemsWrapGrid AllowDrop="True" ItemWidth="{Binding ElementName=Root, Path=ItemWidth}" Orientation="Horizontal" HorizontalAlignment="Center"/>-->
            </ItemsPanelTemplate>
        </GridView.ItemsPanel>

        <GridView.ItemTemplate>
            <DataTemplate x:DataType="models:Note">
                <local:NotePreview Holding="NotePreview_Holding" RightTapped="NotePreview_RightTapped" RequestedTheme="Dark" FlyoutBase.AttachedFlyout="{StaticResource NoteMenuFlyout}"/>
            </DataTemplate>
        </GridView.ItemTemplate>
        
        <GridView.ItemContainerStyle>
            <Style TargetType="GridViewItem">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewItem">
                            <GridViewItemPresenter 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}"
                            CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}"
                            CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}"
                            ContentMargin="0"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}"
                            Padding="{TemplateBinding Padding}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="Transparent"
                            PointerOverBackgroundMargin="1"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            SelectedBackground="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}"
                            SelectedBorderThickness="{ThemeResource ListViewItemCompactSelectedBorderThemeThickness}"
                            SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}"
                            SelectedPointerOverBackground="{ThemeResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"
                            SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}"
                            SelectionCheckMarkVisualEnabled="False" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </GridView.ItemContainerStyle>
    </GridView>
</UserControl>
