<Page
    x:Class="FlatNotes.Views.NoteEditPage"
    x:Name="Root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:FlatNotes.Controls"
    xmlns:Converters="using:FlatNotes.Converters"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    Background="{Binding Note.Color.Color}"
    Foreground="{StaticResource AppNoteForegroundBrush}"
    DataContext="{Binding Source={StaticResource NoteEditViewModel}}"
    d:DataContext="{d:DesignData /SampleData/NoteEditViewModelSampleData.xaml}">

    <Page.Resources>
        <ResourceDictionary>
            <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <Converters:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"/>
            <Converters:FriendlyTimeConverter x:Key="FriendlyTimeConverter"/>
            <Converters:ReorderModeToVisibilityConverter x:Key="ReorderModeToVisibilityConverter"/>
            <Converters:ReorderModeToBooleanConverter x:Key="ReorderModeToBooleanConverter"/>
            <Converters:PositiveIntToVisibilityConverter x:Key="PositiveIntToVisibilityConverter"/>

            <DataTemplate x:Key="NoteChecklistListViewControlTemplate">
                <Grid Loaded="OnChecklistItemLoaded" Unloaded="OnChecklistItemUnloaded">
                    <Grid Margin="12,-4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Viewbox Margin="0,3,0,0" Height="20" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxWithoutContentStyle}" BorderBrush="{StaticResource AppNoteForegroundBrush}" IsEnabled="{Binding ReorderMode, ElementName=NoteChecklistListView, Converter={StaticResource ReorderModeToBooleanConverter}, ConverterParameter=True}" ClickMode="Release" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Viewbox>

                        <TextBox Grid.Column="1" Text="{Binding Text, Mode=TwoWay}" Margin="0" Padding="8,0" Foreground="{StaticResource AppNoteForegroundBrush}" InputScope="Chat" Background="Transparent" BorderThickness="0" FontSize="18" FontWeight="Normal" AcceptsReturn="False" TextWrapping="Wrap" IsEnabled="{Binding ReorderMode, ElementName=NoteChecklistListView, Converter={StaticResource ReorderModeToBooleanConverter}, ConverterParameter=True}" KeyDown="NoteChecklistItemTextBox_KeyDown"/>
                    </Grid>

                    <Grid Background="Transparent" Visibility="{Binding ReorderMode, ElementName=NoteChecklistListView, Converter={StaticResource ReorderModeToVisibilityConverter}}"/>
                </Grid>
            </DataTemplate>

            <MenuFlyout x:Key="NoteImageMenuFlyout">
                <MenuFlyoutItem x:Uid="DeleteMenuFlyoutItem" Text="Delete" Click="DeleteNoteImageMenuFlyoutItem_Click"/>
            </MenuFlyout>

            <DataTemplate x:Key="NoteImagesListViewControlTemplate">
                <Grid x:Name="NoteImageContainer" MaxHeight="220" FlyoutBase.AttachedFlyout="{StaticResource NoteImageMenuFlyout}" Holding="NoteImageContainer_Holding">
                    <Image MinHeight="220" Source="{Binding URL}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Stretch="UniformToFill"/>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" RequestedTheme="Light" Background="{Binding Note.Color.Color}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="CommandBar.(Grid.Row)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="CommandBar.(Grid.Row)" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="1" x:Name="ContentRoot" MaxWidth="1000">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Row="0" ScrollViewer.VerticalScrollMode="Enabled">
                <StackPanel>
                    <Grid MaxHeight="220" Background="{StaticResource PhoneDarkLowBrush}" Visibility="{Binding Note.Images.Count, Converter={StaticResource PositiveIntToVisibilityConverter}}">
                        <ListView x:Name="NoteImagesListView" ItemsSource="{Binding Note.Images}" ItemTemplate="{StaticResource NoteImagesListViewControlTemplate}" SelectionMode="None" RequestedTheme="Dark"/>
                    </Grid>

                    <TextBox x:Uid="TitleTextBox" x:Name="NoteTitleTextBox" PlaceholderText="Title" Text="{Binding Note.Title, Mode=TwoWay}" Foreground="{StaticResource AppNoteForegroundBrush}" InputScope="Chat" Background="Transparent" BorderThickness="0" FontSize="18" Margin="0" Padding="12" FontWeight="Bold" MaxLength="50" TextWrapping="Wrap" KeyDown="NoteTitleTextBox_KeyDown" ScrollViewer.HorizontalScrollMode="Disabled"/>
                    <TextBox x:Uid="TextTextBox" x:Name="NoteTextTextBox" PlaceholderText="Text" Text="{Binding Note.Text, Mode=TwoWay}" Foreground="{StaticResource AppNoteForegroundBrush}" InputScope="Chat" Background="Transparent" BorderThickness="0" FontSize="18" Margin="0" Padding="12,4" FontWeight="Normal" AcceptsReturn="True" TextWrapping="Wrap" Visibility="{Binding Note.IsText, Converter={StaticResource BooleanToVisibilityConverter}}" ScrollViewer.HorizontalScrollMode="Disabled" />

                    <StackPanel Visibility="{Binding Note.IsChecklist, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ListView x:Name="NoteChecklistListView" Margin="0" Padding="0" ItemsSource="{Binding Note.Checklist}" AllowDrop="True" CanDragItems="True" ItemTemplate="{StaticResource NoteChecklistListViewControlTemplate}" Holding="NoteChecklistListView_Holding" SelectionMode="None" IsItemClickEnabled="False" IsTapEnabled="False"/>
                        <Grid Margin="12,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Viewbox Margin="0,3,0,0" Height="20" HorizontalAlignment="Center" VerticalAlignment="Top" IsHitTestVisible="False" Opacity="0">
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxWithoutContentStyle}" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </Viewbox>

                                <Viewbox Margin="2,5,0,0" Width="16" HorizontalAlignment="Center" VerticalAlignment="Top" IsHitTestVisible="False">
                                    <SymbolIcon Symbol="Add" Foreground="{StaticResource PhoneDarkMidBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Viewbox>
                            </Grid>

                            <TextBox Grid.Column="1" x:Uid="NewItemTextBox" x:Name="NewChecklistItemTextBox" PlaceholderText="New item" Text="" Margin="0" Padding="8,0" Foreground="{StaticResource AppNoteForegroundBrush}" InputScope="Chat" Background="Transparent" BorderThickness="0" FontSize="18" FontWeight="Normal" AcceptsReturn="False" TextWrapping="Wrap" KeyDown="NewChecklistItemTextBox_KeyDown" IsEnabled="{Binding ReorderMode, ElementName=NoteChecklistListView, Converter={StaticResource ReorderModeToBooleanConverter}, ConverterParameter=True}" />
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>

            <ScrollViewer Grid.Row="1" Margin="0,12,0,0" Height="40">
                <!-- Visibility="{Binding Note.IsNewNote, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"-->
                <StackPanel Margin="12,12,12,0">
                    <Grid Visibility="{Binding Note.IsArchived, Converter={StaticResource BooleanToVisibilityConverter}}">

                        <Grid Margin="0,0,0,12" Visibility="{Binding Note.ArchivedAt, Converter={StaticResource NullableToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Foreground="{StaticResource PhoneDarkMidBrush}" Text="{Binding ArchivedAtFormatedString}"/>

                            <TextBlock Grid.Column="1" Text="↓" Foreground="{StaticResource PhoneDarkMidBrush}"/>
                        </Grid>
                    </Grid>

                    <Grid Margin="0,0,0,12" Visibility="{Binding Note.UpdatedAt, Converter={StaticResource NullableToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Foreground="{StaticResource PhoneDarkMidBrush}" Text="{Binding UpdatedAtFormatedString}" Visibility="{Binding Note.Changed, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"/>
                        <TextBlock x:Uid="PendingChangesTextBox" Text="pending update" FontStyle="Italic" Foreground="{StaticResource PhoneDarkMidBrush}" Visibility="{Binding Note.Changed, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <TextBlock Grid.Column="1" Text="↓" Foreground="{StaticResource PhoneDarkMidBrush}"/>
                    </Grid>

                    <TextBlock Margin="0,0,0,12" Foreground="{StaticResource PhoneDarkMidBrush}"  Visibility="{Binding Note.CreatedAt, Converter={StaticResource NullableToVisibilityConverter}}" Text="{Binding CreatedAtFormatedString}"/>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <CommandBar Grid.Row="2" x:Name="CommandBar" Background="{Binding Note.Color.DarkColor2}" Foreground="{StaticResource AppNoteCommandBarForegroundThemeBrush}">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="ColorAppBarButton" x:Name="ColorPickerAppBarToggleButton"  Label="color">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE2B1;"/>
                    </AppBarButton.Icon>

                    <AppBarButton.Flyout>
                        <Flyout>
                            <local:NoteColorPicker x:Name="NoteColorPicker" Background="{Binding Note.Color.DarkColor2}"/>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarButton x:Uid="PhotoAppBarButton" Icon="Camera" Label="Photo" Command="{Binding OpenImagePickerCommand}"/>
                <AppBarButton x:Uid="AudioAppBarButton" Icon="Microphone" Label="Audio" IsEnabled="False"/>
                <AppBarButton x:Name="TogglePinAppBarButton" Icon="Pin" Label="Pin to start" Command="{Binding PinCommand}" Visibility="{Binding Note.IsArchived, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"/>
            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="ToggleChecklistAppBarButton" Label="Toggle checklist" Command="{Binding ToggleChecklistCommand}" Icon="List" />
                <AppBarButton x:Uid="RestoreAppBarButton" Icon="Undo" Label="Restore" Command="{Binding RestoreNoteCommand}" Visibility="{Binding Note.IsArchived, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <AppBarButton x:Uid="ArchiveAppBarButton" Icon="Remove" Label="Archive" Command="{Binding ArchiveNoteCommand}" Visibility="{Binding Note.AlreadyExists, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <AppBarButton x:Uid="DeleteAppBarButton" Icon="Delete" Label="Delete" Command="{Binding DeleteNoteCommand}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Grid>
</Page>
