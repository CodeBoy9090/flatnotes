<Page
    x:Class="Keep.Views.NoteEditPage"
    x:Name="Root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Keep.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Controls="using:Keep.Controls"
    xmlns:Converters="using:Keep.Converters"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    Background="{Binding Note.Color.Color}"
    Foreground="{StaticResource KeepNoteForegroundBrush}"
    DataContext="{Binding Source={StaticResource NoteEditViewModel}}"
    d:DataContext="{d:DesignData /SampleData/NoteEditViewModelSampleData.xaml}">

    <Page.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition/>
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <ResourceDictionary>
            <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <Converters:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"/>
            <Converters:FriendlyTimeConverter x:Key="FriendlyTimeConverter"/>
            <Converters:ReorderModeToVisibilityConverter x:Key="ReorderModeToVisibilityConverter"/>
            
            <DataTemplate x:Key="NoteChecklistListViewControlTemplate">
                <Grid Loaded="OnChecklistItemLoaded" Unloaded="OnChecklistItemUnloaded">
                    <Grid Margin="19,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0" IsChecked="{Binding IsChecked, Mode=TwoWay}" HorizontalAlignment="Left" BorderBrush="{StaticResource KeepNoteForegroundBrush}" RequestedTheme="Light"/>
                        <TextBox Grid.Column="1" Text="{Binding Text, Mode=TwoWay}" TextWrapping="Wrap" Margin="0,10,0,0" Background="Transparent" BorderThickness="0" AcceptsReturn="False" FontSize="20" KeyDown="NoteChecklistItemTextBox_KeyDown" />
                    </Grid>
                    
                    <Grid Background="Transparent" Visibility="{Binding ReorderMode, ElementName=NoteChecklistListView, Converter={StaticResource ReorderModeToVisibilityConverter}}"/>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid x:Name="ContentRoot">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Row="0" ScrollViewer.VerticalScrollMode="Enabled">
                <StackPanel Margin="0,9.5,0,0">
                    <TextBox x:Uid="TitleTextBox" x:Name="NoteTitleTextBox" PlaceholderText="Title" Text="{Binding Note.Title, Mode=TwoWay}" MinHeight="60" InputScope="Default" Background="Transparent" BorderThickness="0" FontWeight="Bold" Padding="19,12" Margin="0,12,0,0" TextWrapping="NoWrap" MaxLength="30" FontSize="24" KeyDown="NoteTitleTextBox_KeyDown"/>
                    <TextBox x:Uid="TextTextBox" x:Name="NoteTextTextBox" PlaceholderText="Text" Text="{Binding Note.Text, Mode=TwoWay}" MinHeight="300" InputScope="Default" Background="Transparent" BorderThickness="0" Padding="19,6" AcceptsReturn="True" TextWrapping="Wrap" FontSize="20" Visibility="{Binding Note.IsText, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <StackPanel Visibility="{Binding Note.IsChecklist, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ListView x:Name="NoteChecklistListView" ItemsSource="{Binding Note.Checklist}" AllowDrop="True" CanDragItems="True" ItemTemplate="{StaticResource NoteChecklistListViewControlTemplate}" SelectionMode="None" Holding="NoteChecklistListView_Holding" ReorderMode="{Binding ReorderMode, Mode=TwoWay}"/>

                        <Grid Margin="19,0" Visibility="{Binding ReorderMode, Converter={StaticResource ReorderModeToVisibilityConverter}, ConverterParameter=True}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <CheckBox x:Name="NewChecklistItemCheckbox" Grid.Column="0" HorizontalAlignment="Left" Opacity="0" IsEnabled="False"/>
                                <SymbolIcon Symbol="Add" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{ThemeResource PhoneDarkMidBrush}"/>
                            </Grid>
                            <TextBox x:Uid="NewItemTextBox" x:Name="NewChecklistItemTextBox" Grid.Column="1" PlaceholderText="New item" Text="" Foreground="{StaticResource KeepNoteForegroundBrush}" TextWrapping="Wrap" Margin="0,12,0,0" Background="Transparent" BorderThickness="0" AcceptsReturn="False" KeyDown="NewChecklistItemTextBox_KeyDown" FontSize="20"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>

            <ScrollViewer Grid.Row="1" Height="44">
                <StackPanel Margin="19,12">
                    <StackPanel Margin="0,0,0,12" Orientation="Horizontal">
                        <TextBlock Foreground="{StaticResource PhoneDarkMidBrush}">
                            <Run x:Uid="UpdatedTextBox" Text="Updated"/>
                            <Run Text="{Binding Note.UpdatedAt, Converter={StaticResource FriendlyTimeConverter}}"/>
                        </TextBlock>

                        <TextBlock FontStyle="Italic" Visibility="{Binding Note.Changed, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="{StaticResource PhoneDarkMidBrush}">
                            <Run 
                                Text=" ("/><Run x:Uid="PendingChangesTextBox"
                                Text="pending update"/><Run 
                                Text=")"/>
                        </TextBlock>
                    </StackPanel>

                    <TextBlock Foreground="{StaticResource PhoneDarkMidBrush}">
                        <Run x:Uid="CreatedTextBox" Text="Created"/>
                        <Run Text="{Binding Note.CreatedAt, Converter={StaticResource FriendlyTimeConverter}}"/>
                    </TextBlock>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <Controls:NoteColorPicker x:Name="NoteColorPicker" Background="{Binding Note.Color.DarkColor2}" Visibility="Collapsed"/>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar Background="{Binding Note.Color.DarkColor2}" Foreground="{ThemeResource KeepNoteCommandBarForegroundThemeBrush}">
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="ToggleChecklistAppBarButton"  Icon="List" Label="toggle checklist" Command="{Binding ToggleChecklistCommand}" />
                <AppBarButton x:Uid="RestoreAppBarButton" Icon="Undo" Label="restore" Command="{Binding RestoreNoteCommand}" Visibility="{Binding IsArchived, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <AppBarButton x:Uid="ArchiveAppBarButton" Icon="SaveLocal" Label="archive" Command="{Binding ArchiveNoteCommand}" Visibility="{Binding IsArchived, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}" />
                <AppBarButton x:Uid="DeleteAppBarButton" Icon="Delete" Label="delete" Command="{Binding DeleteNoteCommand}" />
            </CommandBar.SecondaryCommands>

            <AppBarToggleButton x:Uid="ColorAppBarButton" x:Name="ColorPickerAppBarToggleButton" Label="color">
                <AppBarToggleButton.Icon>
                    <BitmapIcon UriSource="ms-appx:///Assets/appbar.water.droplet.png"/>
                </AppBarToggleButton.Icon>
            </AppBarToggleButton>

            <!--<AppBarButton x:Uid="CameraAppBarButton" Icon="Camera" Label="camera" IsEnabled="False"/>
            <AppBarButton x:Uid="AudioAppBarButton" Icon="Microphone" Label="audio" IsEnabled="False"/>
            <AppBarToggleButton x:Uid="PinToStartAppBarButton" Icon="Pin" Label="pin to start" IsEnabled="False" IsChecked="{Binding Note.IsPinned, Mode=OneWay}" Command="{Binding NoteTogglePinCommand}" CommandParameter="{Binding Note}"/>-->

        </CommandBar>
    </Page.BottomAppBar>
</Page>
