<Page
    x:Class="Keep.Views.NoteEditPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Keep.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Controls="using:Keep.Controls"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    Background="{Binding Note.Color.Color}"
    Foreground="{StaticResource KeepNoteForegroundBrush}"
    DataContext="{Binding Source={StaticResource NoteEditViewModel}}"
    d:DataContext="{d:DesignData /SampleData/NoteEditViewModelSampleData.xaml}">
    
    <Page.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition/>
        </TransitionCollection>
    </Page.Transitions>
    
    <Page.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="NoteChecklistListViewControlTemplate">
                <Grid Margin="19,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <CheckBox Grid.Column="0" IsChecked="{Binding IsChecked, Mode=TwoWay}" HorizontalAlignment="Left" BorderBrush="{StaticResource KeepNoteForegroundBrush}" RequestedTheme="Light"/>
                    <TextBox Grid.Column="1" Text="{Binding Text, Mode=TwoWay}" TextWrapping="Wrap" Margin="0,10,0,0" Background="Transparent" BorderThickness="0" AcceptsReturn="False" FontSize="20" /> <!--  IsReadOnly="{Binding ReorderMode, ElementName=NoteChecklistListView}" KeyDown="NoteChecklistItemTextBox_KeyDown"-->
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>
    
    <Grid x:Name="LayoutRoot">
        <Grid x:Name="ContentRoot">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Row="0" ScrollViewer.VerticalScrollMode="Enabled">
                <StackPanel Margin="0,9.5,0,0">
                    <TextBox x:Uid="TitleTextBox" x:Name="NoteTitleTextBox" PlaceholderText="Title" Text="{Binding Note.Title, Mode=TwoWay}" MinHeight="60" InputScope="Default" Background="Transparent" BorderThickness="0" FontWeight="Bold" Padding="19,12" Margin="0,12,0,0" TextWrapping="NoWrap" MaxLength="30" FontSize="24" />
                    <TextBox x:Uid="TextTextBox" x:Name="NoteTextTextBox" PlaceholderText="Text" Text="{Binding Note.Text, Mode=TwoWay}" MinHeight="300" InputScope="Default" Background="Transparent" BorderThickness="0" Padding="19,6" AcceptsReturn="True" TextWrapping="Wrap" FontSize="20" Visibility="{Binding Note.IsText, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <StackPanel Visibility="{Binding Note.IsChecklist, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ListView x:Name="NoteChecklistListView" ItemsSource="{Binding Note.Checklist}" AllowDrop="True" CanDragItems="True" ItemTemplate="{StaticResource NoteChecklistListViewControlTemplate}" SelectionMode="None" ContinuumNavigationTransitionInfo.ExitElementContainer="True"/>

                        <Grid Margin="18,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <CheckBox x:Name="NewChecklistItemCheckbox" Grid.Column="0" IsChecked="False" HorizontalAlignment="Left" Foreground="{StaticResource KeepNoteForegroundBrush}" BorderBrush="{StaticResource KeepNoteForegroundBrush}" RequestedTheme="Light"/>
                            <TextBox x:Uid="NewItemTextBox" x:Name="NewChecklistItemTextBox" Grid.Column="1" PlaceholderText="New item" Text="" Foreground="{StaticResource KeepNoteForegroundBrush}" TextWrapping="Wrap" Margin="0,12,0,0" Background="Transparent" BorderThickness="0" AcceptsReturn="False" KeyDown="NewChecklistItemTextBox_KeyDown" FontSize="20"  />
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>

            <StackPanel Grid.Row="1" Margin="24">
                <StackPanel Margin="0,0,0,12" Orientation="Horizontal">
                    <TextBlock Foreground="{StaticResource PhoneDarkMidBrush}">
                        <Run x:Uid="UpdatedTextBox" Text="Updated"/>
                        <Run Text="{Binding Note.UpdatedAt, Converter={StaticResource FriendlyTimeConverter}}"/>
                    </TextBlock>
                    
                    <TextBlock FontStyle="Italic" Visibility="{Binding Note.Changed, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="{StaticResource PhoneDarkMidBrush}">
                        <Run 
                            Text=" ("/><Run x:Uid="PendingChangesTextBox"
                            Text="pending update"/><Run 
                            Text=")"/>
                    </TextBlock>
                </StackPanel>
                
                <TextBlock Foreground="{StaticResource PhoneDarkMidBrush}">
                    <Run x:Uid="CreatedTextBox" Text="Created"/>
                    <Run Text="{Binding Note.CreatedAt, Converter={StaticResource FriendlyTimeConverter}}"/>
                </TextBlock>
            </StackPanel>
        </Grid>

        <Controls:NoteColorPicker x:Name="NoteColorPicker" Background="{Binding Note.Color.DarkColor2}" Visibility="Collapsed"/>
    </Grid>
    
    <Page.BottomAppBar>
        <CommandBar Background="{Binding Note.Color.DarkColor2}" Foreground="{ThemeResource NoteCommandBarForegroundThemeBrush}">
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="ToggleChecklistAppBarButton"  Icon="List" Label="toggle checklist" Command="{Binding ToggleChecklistCommand}" />
                <AppBarButton x:Uid="DeleteAppBarButton"  Icon="Delete" Label="delete" Command="{Binding DeleteNoteCommand}" />
            </CommandBar.SecondaryCommands>
            
            <AppBarToggleButton x:Uid="ColorAppBarButton" x:Name="ColorPickerAppBarToggleButton" Label="color">
                <AppBarToggleButton.Icon>
                    <BitmapIcon UriSource="/Assets/appbar.water.droplet.png">
                        <BitmapIcon.Foreground>
                            <ImageBrush Stretch="Fill"/>
                        </BitmapIcon.Foreground>
                    </BitmapIcon>
                </AppBarToggleButton.Icon>
            </AppBarToggleButton>
            
            <!--<AppBarButton x:Uid="CameraAppBarButton" Icon="Camera" Label="camera" IsEnabled="False"/>
            <AppBarButton x:Uid="AudioAppBarButton" Icon="Microphone" Label="audio" IsEnabled="False"/>
            <AppBarToggleButton x:Uid="PinToStartAppBarButton" Icon="Pin" Label="pin to start" IsEnabled="False" IsChecked="{Binding Note.IsPinned, Mode=OneWay}" Command="{Binding NoteTogglePinCommand}" CommandParameter="{Binding Note}"/>-->

        </CommandBar>
    </Page.BottomAppBar>
</Page>
